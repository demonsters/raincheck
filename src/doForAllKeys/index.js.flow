// @flow

import type {MiddlewareAPI, Middleware} from 'redux'

type NextFunction = (destructFunction: DestructFunction) => void
type ConstructFunction<S, A> = (value: ?any, next: NextFunction, ...args: P) => DestructFunction
type DestructFunction = () => void

type DoWhen<S, P> = (state: S, ...rest: P) => void

declare export default function doForAllKeys<S, A, P> (selector: (state: S, ...rest: P) => Array<string>, startFunc: ConstructFunction<S, A> ): DoWhen<S, P>

