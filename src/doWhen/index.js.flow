
import { DoWhen, DestructFunction } from '../_libs/createConstruct'
import { ChainAPI } from '../_libs/createChainAPI';

//
type ConstructFunction<P> = (props: P, chainAPI?: ChainAPI) => DestructFunction | void

type CallFunction = <P>(funct: ConstructFunction<P>, props?: P, key?: string ) => void

type CheckerFunction<S> = (call: CallFunction, props: S) => void

declare export default function doWhen<S, A> (func: CheckerFunction<S, A> ): DoWhen<S, S>
