// @flow

import type {MiddlewareAPI, Middleware} from 'redux'

type NextFunction = (destructFunction: DestructFunction) => void
type DestructFunction = () => void
type ConstructFunction<S, A> = (next: NextFunction, param: MiddlewareAPI<S, A>) => DestructFunction

type DoWhen<S> = (state: S, ...rest: Array<*>) => void

declare export default function doWhen<S, A> (selector: (state: S) => boolean, func: ConstructFunction<S, A> ): DoWhen<S>
