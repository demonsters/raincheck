// @flow

import type {DoWhen, ConstructFunction} from '../_libs/createConstruct'

type Value<S> = { [key: any]: any } | null | false | void

type ChainFunctions<S, I> = {
  do: <P>(startFunc: ConstructFunction<S, P>) => DoWhen<S, I, P>
}

declare export default function when<S, I, P> (defaulValue: S | (item: I) => S): ChainFunctions<S, P>
